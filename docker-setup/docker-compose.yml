version: '3.3'
services:
  mysql-datastore:
    container_name: mysql-datastore
    image: mariadb:10.3.24-focal
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=db
      - MYSQL_USER=debezium
      - MYSQL_PASSWORD=debezium
    volumes:
      - ./mnt/db_mnt/target/mysql_data:/var/lib/mysql
#      - ./mnt/mysql/my.cnf:/etc/mysql/my.cnf
#      - ./mnt/mysql/digicert_com_replication.sql:/home/digicert_com_replication.sql
#      - ./mnt/mysql/certopedia.sql:/home/certopedia.sql
    ports:
      - "0.0.0.0:3306:3306"
  zookeeper:
    container_name: zookeeper
    image: debezium/zookeeper
    ports:
      - "0.0.0.0:2181:2181"
      - "0.0.0.0:2888:2888"
      - "0.0.0.0:3888:3888"
    volumes:
      - ./mnt/zookeeper/data:/zookeeper/data
      - ./mnt/zookeeper/txns:/zookeeper/txns
  kafka:
    container_name: kafka
    image: debezium/kafka
    ports:
      - "29092:29092"
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181/kafka
      - KAFKA_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://kafka:29092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_NUM_PARTITIONS=3
    volumes:
      - ./mnt/kafka/data:/kafka/data
#  connect:
#    container_name: connect
#    # image: debezium/connect:1.3
#    image: anieshaz/connect:1.0
#    ports:
#      - "0.0.0.0:8083:8083"
#      - "0.0.0.0:5005:5005"
#    links:
#      - mysql-datastore
#    environment:
#      - BOOTSTRAP_SERVERS=kafka:9092
#      - GROUP_ID=1
#      - CONFIG_STORAGE_TOPIC=connect_configs
#      - OFFSET_STORAGE_TOPIC=connect_offsets
#      - STATUS_STORAGE_TOPIC=connect_statuses
#  connect_ui:
#    container_name: connect_ui
#    image: landoop/kafka-connect-ui
#    ports:
#      - "0.0.0.0:8003:8000"
#    environment:
#      - CONNECT_URL=http://connect:8083
#    depends_on:
#      - connect
  schema_registry:
    container_name: schema_registry
    image: confluentinc/cp-schema-registry
    ports:
      - "0.0.0.0:8181:8181"
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    depends_on:
      - kafka
  kafka_manager:
    image: hlebalbau/kafka-manager:1.3.3.18
    ports:
      - "0.0.0.0:9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
#  web:
#    image: elkozmon/zoonavigator-web:0.5.0
#    container_name: zoonavigator-web
#    ports:
#      - "0.0.0.0:7070:7070"
#    environment:
#      WEB_HTTP_PORT: 7070
#      API_HOST: "api"
#      API_PORT: 9000
#    depends_on:
#      - api
#  api:
#    image: elkozmon/zoonavigator-api:0.5.0
#    container_name: zoonavigator-api
#    environment:
#      API_HTTP_PORT: 9000
  elastic-search-0:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    container_name: elastic-search-0
    environment:
      - node.name=elastic-search-0
      - cluster.name=cluster-0
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./mnt/es/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
  kibana-0:
    image: docker.elastic.co/kibana/kibana:7.15.1
    container_name: kibana-0
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic-search-0:9200
    ports:
      - 5601:5601